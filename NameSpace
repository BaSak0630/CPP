#include <iostream>
void SimpleFunc(void)
{
	std::cout << "BestCom이 정의한 함수" << std::endl;		
}
void SimpleFunc(void)
{
	std::cout << "ProgCom 이 정의한 함수" << std::endl;
}

int main(void)
{
	BestComImpl::SimpleFunc();
	ProgComImpl::SimpleFunc();
	return 0;
}

위 코드처럼 함수의 이름과 매개변수 형이 돌일한 경우 문제가 될수 있다. 그래서 함수의 자신만의
이름공간을 만들어주면

#include <iostream>

namespace BestComImpl
{
	void SimpleFunc(void)
	{
		std::cout << "BestCom이 정의한 함수" << std::endl;		
	}
}

namespace ProgComImpl
{
	void SimpleFunc(void)
	{
		std::cout << "ProgCom 이 정의한 함수" << std::endl;
	}
}

int main(void)
{
	BestComImpl::SimpleFunc();
	ProgComImpl::SimpleFunc();
	return 0;
}

이름충돌은 발생하지 않는다.

위 코드에 연산자 :: 은 범위지정 연산자로 (scope resolution operator)이다 
이름공간을 지정할 떄 사용하는 연산자이다. 
